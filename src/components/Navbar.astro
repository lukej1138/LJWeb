---
import {Icon} from "astro-icon/components";

const navLinks = [
    {
        name: 'Skillz',
        url: '#skills',
        style: 'transparent',
    },
    {
        name: 'Projects',
        url: '#projects',
        style: 'transparent',
    },
    {
        name: 'Current',
        url: '#current',
        style: 'transparent',
    },
    {
        name: 'Connect',
        url: '#contact',
        style: 'primary',
    },
    
];
---
<nav>
    <div class = "container nav-container">
        <a href="#home"><Icon name="name" class="name" /></a>
        <div class = "nav-wrapper">
            <button class="btn btn--menu", id="menu-btn" aria-expanded="false" aria-label="Open mobile nav">
                <Icon name="fe:bar" width = {25} height = {25}/>
            </button>
            <ul class="nav-links" role="navigation">
                {
                    navLinks.map(link => (
                        <li role="none">
                            <a href={link.url} class={`btn btn--${link.style} nav-link`}>{link.name}</a>
                        </li>
                    ))
                }
            </ul>
        </div>
    </div>
</nav>

<script>
    const navBtn = document.querySelector('#menu-btn');
    if(navBtn){
        navBtn.addEventListener('click', () => {
        navBtn.setAttribute('aria-expanded', navBtn.getAttribute('aria-expanded') == 'false' ? 'true' : 'false')
    });
    }
</script>

<script>
    document.addEventListener("DOMContentLoaded", function() {
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener("click", function(event) {
            event.preventDefault(); // Stops the default jumpin
            const targetId = this.getAttribute("href").substring(1);
            const targetElement = document.getElementById(targetId);

            if (targetElement) {
                const navbarHeight = document.querySelector(".nav-container").getBoundingClientRect().height;
                console.log(navbarHeight);
                const targetPosition = targetElement.getBoundingClientRect().top + window.scrollY - 2*navbarHeight;

                window.scrollTo({
                    top: targetPosition,
                    behavior: "smooth"
                });
            }
        });
    });
    })
</script>
